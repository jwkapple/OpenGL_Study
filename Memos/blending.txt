

1. fragment shader 부분에서 현재 fragment를 사용하지 않고싶을때는
discard 명령어를 통해 셰이더를 중지하고 버릴 수 있다. 



2.rgba 를 사용하여 filter을 할경우 일반적으로 GL_REPEAT를 하게 되는데 이와같이 되면
edge에 대해 실제 a가 0이라 하더라도 아래반대쪽 부분이 a가 1이게 되면
 이에의해 실제 존재하지 않는 자잘한 점이 생기는데 이를 해결하기위해 
GL_CLAMP_TO_EDGE를 사용하면 edge부분에 대해서는 filter를 걸지 않도록 한다. 


3.
glBlendFunc 이외에 glBlendFuncSeparate 으로 Factor뿐만 아니라 Source또한 자유롭게
설정할 수 가 있다.

4. depth testing이 이루어지는 도중에는 fragment의 trasparency에 대해서는 
신경을 안쓰기때문에 transparency는 제대로 depth buffer에 입력되지 않는다.
따라서 일일히 거리에 따른 분류를 하여 뒤에 있는것부터 순서대로 렌더링하여야한다.

5. stencil buffer 때 사용한 박스에는 문제가 없으나 새로 추가한 위도우에 대해서 
   먼저 렌더링된 window 위에 새로운 window 가 제대로 된 렌더링이 일어나지 않음을
  확인했다.  이유는 결국 glStencilOp(GL_KEEP,GL_KEEP,GL_REPLACE) 였다. 
 (GL_REPLACE인 3번째 파라미터에서 정상 통과되면 대체해버리는 문제가 발생)
 따라서 박스의 테두리 하이라이트 시에만 해당 옵션을 켜두고 평소에는 디폴트인
lStencilOp(GL_KEEP,GL_KEEP,GL_KEEP)으로 설정했다.

*length의 optimization 

1) glm::length2 
 
**order independent transparency 